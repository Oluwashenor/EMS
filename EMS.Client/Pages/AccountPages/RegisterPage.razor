@page "/identity/account/register"
@using EMS.Client.Pages.OtherPages
@layout AuthenticationLayout
@inject SfDialogService DialogService;

<div class="container">
    <div class="row">
        <div class="col-lg-6">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
                 <DataAnnotationsValidator />
                 <ValidationSummary />
                 <div class="card">
                     <div class="card-header">Fill this form to login</div>
                     <div class="card-body">
                         <div class="form-group">
                             <label class="form-label">Full name</label>
                             <InputText @bind-Value="User.FullName" class="form-control"></InputText>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Email</label>
                             <InputText @bind-Value="User.Email" class="form-control"></InputText>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Password</label>
                             <input type="password" @bind="User.Password" class="form-control"></input>
                         </div>
                         <div class="form-group mt-3">
                             <label class="form-label">Confirm Password</label>
                             <input type="password" @bind="User.ConfirmPassword" class="form-control"></input>
                         </div>
                         <div class="form-group mt-3">
                             @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else{
                            <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                            }
                         </div>
                     </div>
                     <div class="card-footer">
                         <span class="text-center">
                             Have an account already | 
                             <a href="identity/account/login"> Sign In</a>
                         </span>
                         <ValidationSummary/>
                     </div>
                 </div>
             </EditForm>
         </div>
     </div>
 </div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();
    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            User = new();
            NavManager.NavigateTo("/login", forceLoad: false);
        }
        else
        {
            await DisplayDialog(result.Message, "Alert!");
        }
        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}